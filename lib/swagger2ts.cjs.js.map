{"version":3,"file":"swagger2ts.cjs.js","sources":["../src/core/parse.ts","../src/helper/logger.ts","../src/core/config.ts","../src/index.ts"],"sourcesContent":["import type { SwaggerJson, SwaggerPath, SwaggerDefinitions } from '../type/SwaggerJson'\n\nconst transformPaths = (paths: SwaggerPath) => {\n  const res: any[] = []\n  for (const path in paths) {\n    const pathItem = paths[path]\n\n    Object.keys(pathItem).forEach((method) => {\n      const { operationId, produces, parameters, responses } = pathItem[method]\n      res.push({\n        method,\n        apiName: operationId,\n        produces,\n        parameters,\n        responses\n      })\n    })\n  }\n  return res\n}\n\nconst transformDefinitions = (definitions: SwaggerDefinitions) => {\n  console.log('definitions: ', definitions)\n  return []\n}\n\nexport const parseSwagger = (swaggerJsonStr: string) => {\n  const swaggerJson: SwaggerJson = JSON.parse(swaggerJsonStr)\n  const { swagger, info, paths, definitions } = swaggerJson\n  const swaggerInfo = {\n    swaggerVersion: swagger,\n    info\n  }\n\n  const pathsResult = transformPaths(paths)\n  const definitionsResult = transformDefinitions(definitions)\n\n  return {\n    swaggerInfo,\n    pathsResult,\n    definitionsResult\n  }\n}\n","/* eslint no-console: 0 */\n\nimport colors from 'picocolors'\nimport type { RollupError } from 'rollup'\n\nexport type LogType = 'error' | 'warn' | 'info'\nexport type LogLevel = LogType | 'silent'\nexport interface Logger {\n  info(msg: string, options?: LogOptions): void\n  warn(msg: string, options?: LogOptions): void\n  warnOnce(msg: string, options?: LogOptions): void\n  error(msg: string, options?: LogErrorOptions): void\n}\n\nexport interface LogOptions {\n  clear?: boolean\n  timestamp?: boolean\n}\n\nexport interface LogErrorOptions extends LogOptions {\n  error?: Error | RollupError | null\n}\n\nconst output = (type: LogType, msg: string) => {\n  const prefix = 'swagger2ts'\n\n  /* eslint no-nested-ternary: 0 */\n  const tag =\n    type === 'info'\n      ? colors.cyan(colors.bold(prefix))\n      : type === 'warn'\n      ? colors.yellow(colors.bold(prefix))\n      : colors.red(colors.bold(prefix))\n\n  console[type](\n    `${colors.bgWhite(colors.bold(new Date().toLocaleTimeString()))} : ${tag}  ` + '\\n\\t' + `${msg}`\n  )\n}\n\nexport function createLogger(): Logger {\n  const warnedMessages = new Set<string>()\n\n  const logger: Logger = {\n    info(msg) {\n      output('info', msg)\n    },\n    warn(msg) {\n      output('warn', msg)\n    },\n    warnOnce(msg) {\n      if (warnedMessages.has(msg)) return\n      output('warn', msg)\n      warnedMessages.add(msg)\n    },\n    error(msg) {\n      output('error', msg)\n    }\n  }\n\n  return logger\n}\n","import { readFileSync } from 'node:fs'\nimport { parseSwagger } from './parse'\nimport { createLogger } from '../helper/logger'\n\nexport type Swagger2TsOptions = {\n  name: string\n  httpClientType: 'axios'\n  input?: string\n  url?: string\n  output: string\n}\n\nconst logger = createLogger()\n\ntype ResolvedConfig = any\n\nexport const resolveOptions: (options: Swagger2TsOptions) => Promise<ResolvedConfig> = async (\n  options\n) => {\n  const { name, output, httpClientType, input, url } = options\n\n  if (!input && !url) {\n    logger.error('You must provide either an input file or a url')\n    process.exit(1)\n  }\n\n  let swaggerJson: any = null\n\n  if (input) {\n    swaggerJson = readFileSync(input, 'utf8')\n    if (!swaggerJson) {\n      logger.error(`Could not read file in this path : ${input}`)\n      process.exit(1)\n    }\n  }\n\n  const res = await parseSwagger(swaggerJson)\n\n  const resolved: ResolvedConfig = {\n    name,\n    ...res,\n    output,\n    httpClientType,\n    input,\n    url\n  }\n\n  return resolved\n}\n","import { resolveOptions } from './core'\nimport type { Swagger2TsOptions } from './core'\n\nexport const swagger2ts = async (options: Swagger2TsOptions) => {\n  const resolvedOptions = await resolveOptions(options)\n  console.log('resolvedOptions: ', resolvedOptions)\n}\n"],"names":["colors","readFileSync"],"mappings":"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"}